#!/bin/bash
# Set API Key here
JOXI_API_KEY=""

# Joxi for Ubuntu/linux
# Owner : Zobkov Dmitry
# (fork of Puush for Ubuntu/Linux)
# (Original owner : Sunmock Yang)
# March 2020
#
# Dependencies:
# - scrot
# - curl
# - xclip
# - notify-send
#
# Licence : Beerware
#
# Instructions:
# - Add your joxi API key to JOXI_API_KEY (You can find your API key at 'access_token' field in response from joxi chrome plugin login)
# - Place this file wherever you want (/usr/local/bin)
# - Set up keyboard shortcuts within linux (in Ubuntu it's system settings > keyboard > keyboard shortcuts > custom shortcuts)
#
# 		command			description		(recommended keyboard shortcut)
#		---------------------------------------------------------------
#		joxi -w			capture window	(Ctrl + Shift + 2/@)
#		joxi -f			capture desktop	(Ctrl + Shift + 3/#)
#		joxi -a			area capture	(Ctrl + Shift + 4/$)
#
#
# Notes:
# - Link(s) will be copied into clipboard and appear in notifications
# - joxi curl upload code was reverse engineered

# Usage: joxiFile [fileName]
function joxiFile ()
{
	if [ -z "$1" ]; then
		echo "No file specified"
		exit 1
	elif [ ! -f "$1" ]; then
		echo "Joxi upload cancelled"
		exit 1
	fi

	uploadId=`curl  -# --location --request POST "https://api.joxi.net/drive/v1/files?fields=id,alternateLink,selfLink" \
					--header "Authorization: Bearer $JOXI_API_KEY" \
					--data-raw '{"description": "", "mimeType": "image/vnd.joxi.screenshot"}' \
					| grep -oP '(?<="id":").*?[^\\\](?=",|"\})'`

	if [ ! -z "$uploadId" ]; then
		fileURL=`curl   -# --location --request PUT "https://api.joxi.net/upload/drive/v1/files/$uploadId?fields=id" \
						--header "Content-Disposition: attachment; filename*=${1##*/}" \
						--header "Authorization: Bearer $JOXI_API_KEY" \
						--data-binary "@$1" \
						| grep -oP '(?<="alternateLink":").*?[^\\\](?=",|"\})' \
						| sed 's|\\\/|/|g'`

		if [ ! -z "$fileURL" ]; then
			# Copy link to clipboard, show notification
			printf $fileURL | xclip -selection "clipboard"
			notify-send -i "$( cd "$( dirname "$0" )" && pwd )/icon.png" -t 2000 "Upload to joxi complete!" "$fileURL"
		fi
	fi
}

function helpText ()
{
  printf "_____________ Joxi for linux _____________\n"
  printf "Created by Zobkov Dmitry using the joxi api\n"
  printf "(fork of puush for Linux by Sunmock Yang)\n"
  printf "\n"
  printf "Usage:\n"
  printf "  joxi [OPTIONS]\n"
  printf "\n"
  printf "OPTIONS:\n"
  printf "  --area, -a         select area to capture\n"
  printf "  --full, -f         capture entire desktop\n"
  printf "  --window, -w       capture current window\n"
  printf "\n"
  printf "  --help, -h         show this page\n"
}

function generateFileName () { echo "/tmp/joxi-linux_$(date +"%Y-%m-%dT%I-%M-%S").png"; }


if [ -z "$JOXI_API_KEY" ]; then
  echo "Set the variable JOXI_API_KEY in $0"
  echo "You can find your API key at 'access_token' field in response from joxi chrome plugin login"

  notify-send -i "$( cd "$( dirname "$0" )" && pwd )/icon.png" "Set the variable JOXI_API_KEY in $0" "You can find your API key at 'access_token' field in response from joxi chrome plugin login"

  exit 1

elif [ -z "$1" ]; then
	echo "No file entered."
	helpText
  exit 1

fi

# Get file to upload and upload it
case "$1" in
	-a|--area)
		echo "Area"
			fileName=$(generateFileName)
			scrot -s -z "$fileName"
			joxiFile "$fileName"
		;;

	-f|--full)
		echo "Whole Desktop"
			fileName=$(generateFileName)
			scrot -m -z "$fileName"
			joxiFile "$fileName"
		;;

	-w|--window)
		echo "Window"
			fileName=$(generateFileName)
			scrot -u -z -b "$fileName"
			joxiFile "$fileName"
		;;

	-h|--help)
		helpText
		exit 0
		;;

esac
